include ../make.qepy.inc
include ../make.depend
QESRC_DIR = atomic/src
PNAME = qepy_atomic
QEPY_LIBS = -L../ $(MODS_BASE)
QEPY_INCS = -I. -I$(QEDIR)/$(QESRC_DIR) $(INCS_MODS_BASE) $(INCS_MODS_BASE_QE)

QEPY_OBJS = 

QEPY_PROG_OBJS = ld1.o

QEPY_FIX_OBJS = 

QE_OBJS = 

LIB_OBJS_TEMP = add_exchange.o \
all_electron.o \
ascheq.o \
ascheqps.o \
ascheqps_drv.o \
atomic_paw.o \
c6_dft.o \
c6_tfvw.o \
calculate_gipaw_orbitals.o \
cfdsol.o \
chargeps.o \
compute_chi.o \
compute_chi_tm.o \
compute_phi.o \
compute_phi_tm.o \
compute_phius.o \
compute_potps.o \
compute_potps_new.o \
compute_q_3bess.o \
compute_relpert.o \
compute_solution.o \
default_conf.o \
descreening.o \
dfx_new.o \
dir_outward.o \
dirsol.o \
dmixp.o \
drho0ofvx.o \
drhoofv.o \
dvex.o \
el_config.o \
elsd.o \
elsd_highv.o \
elsdps.o \
elsdps_paw.o \
esic.o \
export_upf.o \
find_qi.o \
gener_pseudo.o \
grad_log.o \
green.o \
import_upf.o \
int_0_inf_dr.o \
integrate_inward.o \
integrate_outward.o \
intref.o \
inward.o \
kin_e_density.o \
kli.o \
ld1_readin.o \
ld1_setup.o \
ld1_writeout.o \
ld1inc.o \
lderiv.o \
lderivps.o \
lschps.o \
new_potential.o \
newd_at.o \
nodenum.o \
normalize.o \
occ_spin.o \
outward.o \
parameters.o \
partial_wave_expansion.o \
paw_type.o \
pseudo_q.o \
pseudovloc.o \
read_pseudo_ncpp.o \
read_pseudo_rrkj3.o \
run_lda_half.o \
run_pseudo.o \
run_test.o \
scf.o \
seriebes.o \
set_psi_in.o \
set_rc_rv.o \
set_rho_core.o \
set_sl3.o \
sic_correction.o \
start_potps.o \
start_scheq.o \
starting_potential.o \
test_bessel.o \
trou.o \
v_of_rho_at.o \
vdpack.o \
vext.o \
vpack.o \
vxcgc.o \
write_ae_pseudo.o \
write_cpmd.o \
write_files.o \
write_paw_recon.o \
write_pseudo.o \
write_results.o \
write_resultsps.o

vpath %.f90 ../fix/ ../cmdx/ $(SRC_DIR) $(QEDIR)/$(QESRC_DIR)

QEPY_OBJS := ${QEPY_OBJS} ${QEPY_FIX_OBJS} ${QEPY_PROG_OBJS}
LIB_OBJS_TEMP := $(filter-out ${QEPY_OBJS}, ${LIB_OBJS_TEMP})
LIB_OBJS := $(addprefix $(QEDIR)/$(QESRC_DIR)/,$(LIB_OBJS_TEMP))

ifeq ($(strip $(WRAP_OBJS)),)
QEPY_OBJS = qepy_fake.o
endif

.PHONY: all

${F90WRAP_FILES}: ${QEPY_OBJS} ${WRAP_FPP_FILES}
	@${PYTHON} -m f90wrap --f90wrap -m ${PNAME} --f90-mod-name lib${PNAME} ${WRAP_FPP_FILES} -k $(PY_SRC_DIR)/kind_map.json -P 
